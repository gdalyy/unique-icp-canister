type Cart = record {
  id : text;
  "principal" : principal;
  createdAt : nat64;
  cartItems : vec text;
  updatedAt : opt nat64;
  totalPrice : float64;
};
type CartItem = record {
  id : text;
  name : text;
  createdAt : nat64;
  updatedAt : opt nat64;
  quantity : nat16;
  cartId : text;
  price : float64;
};
type CartItemPayload = record {
  name : text;
  quantity : nat16;
  price : float64;
};
type _AzleResult = variant { Ok : CartItem; Err : text };
type _AzleResult_1 = variant { Ok : Cart; Err : text };
type _AzleResult_2 = variant { Ok : vec CartItem; Err : text };
type _AzleResult_3 = variant { Ok : vec Cart; Err : text };
service : () -> {
  addCartItem : (CartItemPayload, text) -> (_AzleResult);
  createCart : () -> (_AzleResult_1);
  deleteCart : (text) -> (_AzleResult_1);
  getCart : (text) -> (_AzleResult_1) query;
  getCartItems : (text) -> (_AzleResult_2) query;
  getCarts : () -> (_AzleResult_3) query;
  updateCartItem : (CartItemPayload, text) -> (_AzleResult);
}